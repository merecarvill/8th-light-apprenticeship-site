---
layout:     post
title:      "Set up a blog on Github Pages in 15 minutes."
date:       2015-09-13
categories: blogs github jekyll
---
When setting up my blog, I didn't want to commit to a service that might go out of vogue or that prevented me from having easy access and control over the content I generated. Github Pages seemed like a reasonable choice, offering free hosting and where making a new post is as easy as pushing new content to a repo.

If the above sounds good to you, if you like the control over format and styling offered by markup syntax, and/or if you would enjoy the flexibility to completely restyle your site as often as you'd like - then this may be the right choice for you. A warning though: the sites generated by Jekyll (the gem used to generate and serve sites on Github Pages) are static, and you wont have much ability to implement dynamic features on your site or to take information/content from visitors. The other side of that coin, however, is no futzing with databases or worrying about your site's security.

If you want to give Github Pages/Jekyll a go, here's pretty much what I did to get started:

* Create a new github repository named [username].github.io, where [username] is your github username.
* Clone the new repo on your machine.
* (Optional, but suggested) Install Jekyll on your machine. You'll need ruby and bundler installed. Add `gem 'github-pages'` to a Gemfile and run `bundle install` in the terminal. With Jekyll on your machine, you can serve your site locally and preview changes to your site before pushing it up to github for all to see. You can run Jekyll in a way that matches the GitHub Pages build server using the command `bundle exec jekyll serve` - your site will be available at `http://localhost:4000`.
* Go to [jekyllthemes.org/](http://jekyllthemes.org/) or any other site hosting themes for Jekyll sites. Pick your favorite, download it, and copy the contents of the .zip file to your site repo.
* The parts of the directory structure that you'll need to understand in order to get up and running are the `_posts` folder and the `_config.yml` file. You'll be adding your content to the `_posts` folder and tweaking the `_config.yml` file to alter the site to your liking. There will also likely be a helpful guide among the files of the Jekyll theme you downloaded, which will be able to give you specific advice on how to customize your particular theme.
  * `_config.yml` contains a number of configuration options for your site, and will also likely contain the definitions of many variables used elsewhere in the site. For example, in the [Pithy theme](http://jekyllthemes.org/themes/pithy/), the `_config.yml` file contains variables that determine the site's title and description, home page's header, author's email, author's github username, etc.
  * `_posts` contains your blog posts - each file is written in a markup language, contains the content of one post, and must be named according to a format that includes the date and title of the post. For example, `2015-08-04-welcome-to-jekyll.md` is a post titled "Welcome to Jekyll," made on August 4th, 2015 and written in Markdown. Each post also requires the first thing in the file to be a YAML front matter block - which is basically a series of variable declarations sandwiched between triple dashes. In most cases their function will be self-evident, especially with reference to the front matter of any example posts included in your theme. The front matter for this post looks like this:
{% highlight ruby %}
---
layout:     post
title:      "Set up a blog on Github Pages in 15 minutes."
date:       2015-09-13
categories: blogs github jekyll
---
{% endhighlight %}

* Change whatever you would like about your site. This is where having Jekyll installed and hosting your site locally in order to preview the results of your changes can be helpful. The served site will update to reflect your changes without having to restart the server (in most cases, at least).
* Push your changes to github. You can view your live site at [username].github.io, replacing [username] with your github username.

If you want to get deeper into Jekyll or use a custom domain with your site, check out the links at the bottom of this [page](https://pages.github.com/). There's also a [post](http://joshualande.com/jekyll-github-pages-poole/) by Joshua Lande that goes much deeper into customizing your blog and adding bells and whistles like support for comments and Google analytics tracking.

